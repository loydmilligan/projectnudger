{
  "task_id": "Task-2.1",
  "task_description": "Add task count displays (\"X/Y complete\") and project age indicators to project cards for better at-a-glance information",
  "baseline_manifest": {
    "version": "1.4",
    "generated": "2025-07-15T22:05:00.000Z",
    "project": {
      "name": "project-nudger",
      "description": "An opinionated task management application designed to combat project neglect and procrastination through a weighted priority system and an escalating series of notifications",
      "version": "0.0.0",
      "tech_stack": "React 19.1.0 + Vite 6.3.5 + Firebase Firestore + Tailwind CSS + Web Bluetooth + AI Integration + @dnd-kit for drag-and-drop",
      "deployment": "Netlify static site with Firebase backend",
      "repository": "Active Git repository with task-driven development workflow"
    },
    "files": {
      "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/views/ProjectsView.jsx": {
        "purpose": "Optimized projects management interface with enhanced card layout, improved responsive design, and dual-mode display (grid/kanban)",
        "exports": {
          "functions": ["ProjectsView"],
          "classes": [],
          "constants": []
        },
        "imports": [
          "react", 
          "lucide-react", 
          "../shared/ProjectFilters", 
          "../../utils/helpers", 
          "./ProjectsView/KanbanBoard",
          "./ProjectsView/ViewModeToggle",
          "./ProjectsView/StageManager"
        ],
        "enhancements": [
          "Task-1.5: Optimized grid layout with enhanced responsive breakpoints",
          "Task-1.5: Reduced white space with gap-4 instead of gap-6",
          "Task-1.5: Enhanced column progression (1→2→3→4) for better screen utilization",
          "Task-1.5: Added medium breakpoint for improved tablet experience",
          "Task-1.5: Better integration with ProgressBar components from Task-1.2"
        ]
      },
      "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/utils/helpers.js": {
        "purpose": "Core utility functions for time formatting, color generation, URL validation, and task analysis",
        "exports": {
          "functions": [
            "timeAgo",
            "generateHslColor",
            "getComplementaryColor", 
            "getAnalogousColor",
            "formatTime",
            "isValidUrl",
            "formatUrl",
            "isPastDue",
            "isNudged"
          ],
          "classes": [],
          "constants": []
        },
        "imports": [],
        "sideEffects": []
      }
    },
    "dependencies": {
      "runtime": [
        "react@19.1.0 - Core UI framework",
        "react-dom@19.1.0 - DOM rendering library", 
        "firebase@11.9.1 - Backend database and authentication",
        "lucide-react@0.517.0 - Icon library"
      ]
    }
  },
  "expected_manifest": {
    "version": "1.5",
    "generated": "2025-07-15T22:30:00.000Z",
    "files": {
      "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/utils/dateHelpers.js": {
        "purpose": "Date and age calculation utilities for project management with color-coded age indicators",
        "exports": {
          "functions": [
            "calculateProjectAge",
            "formatAge", 
            "getAgeColorClass",
            "getAgeInDays"
          ],
          "classes": [],
          "constants": ["AGE_THRESHOLDS"]
        },
        "imports": [],
        "sideEffects": [],
        "features": [
          "Calculate project age from creation date",
          "Format age for human-readable display (days, weeks, months)",
          "Color-coded age indicators based on configurable thresholds",
          "Age threshold constants for visual feedback"
        ]
      },
      "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/utils/helpers.js": {
        "purpose": "Core utility functions for time formatting, color generation, URL validation, and task analysis - enhanced with project information utilities",
        "exports": {
          "functions": [
            "timeAgo",
            "generateHslColor",
            "getComplementaryColor", 
            "getAnalogousColor",
            "formatTime",
            "isValidUrl",
            "formatUrl",
            "isPastDue",
            "isNudged",
            "getTaskCountForProject",
            "getProjectAge",
            "getAgeColorClass"
          ],
          "classes": [],
          "constants": []
        },
        "imports": ["./dateHelpers"],
        "sideEffects": [],
        "enhancements": [
          "Added getTaskCountForProject function for calculating completed vs total tasks",
          "Added getProjectAge function for age calculation and formatting",
          "Added getAgeColorClass function for color-coded age indicators",
          "Integrated with dateHelpers utility for consistent date handling"
        ]
      },
      "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/views/ProjectsView.jsx": {
        "purpose": "Enhanced projects management interface with task count displays, age indicators, and improved information display",
        "exports": {
          "functions": ["ProjectsView"],
          "classes": [],
          "constants": []
        },
        "imports": [
          "react", 
          "lucide-react", 
          "../shared/ProjectFilters", 
          "../../utils/helpers", 
          "../../utils/dateHelpers",
          "./ProjectsView/KanbanBoard",
          "./ProjectsView/ViewModeToggle",
          "./ProjectsView/StageManager"
        ],
        "enhancements": [
          "Task-1.5: Optimized grid layout with enhanced responsive breakpoints",
          "Task-1.5: Reduced white space with gap-4 instead of gap-6",
          "Task-1.5: Enhanced column progression (1→2→3→4) for better screen utilization",
          "Task-1.5: Added medium breakpoint for improved tablet experience",
          "Task-1.5: Better integration with ProgressBar components from Task-1.2",
          "Task-2.1: Added task count displays in 'X/Y complete' format",
          "Task-2.1: Integrated project age indicators with color coding",
          "Task-2.1: Enhanced project cards with at-a-glance information display",
          "Task-2.1: Real-time updates for task counts and age indicators",
          "Task-2.1: Responsive layout accommodating new information elements"
        ]
      }
    }
  },
  "implementation_notes": {
    "approach": "Create new dateHelpers utility, enhance helpers.js with project information functions, and update ProjectsView to display task counts and age indicators",
    "files_to_create": [
      {
        "file": "src/utils/dateHelpers.js",
        "purpose": "Date and age calculation utilities for project management",
        "key_exports": ["calculateProjectAge", "formatAge", "getAgeColorClass", "getAgeInDays"]
      }
    ],
    "files_to_modify": [
      {
        "file": "src/utils/helpers.js",
        "changes": "Add getTaskCountForProject, getProjectAge, and getAgeColorClass functions"
      },
      {
        "file": "src/components/views/ProjectsView.jsx", 
        "changes": "Add task count and age display to project cards with color-coded indicators"
      }
    ],
    "dependencies": [],
    "integration_points": [
      "ProjectsView component will use enhanced helpers for task counting and age display",
      "dateHelpers utility will provide consistent date formatting across the application",
      "Age indicators will use color coding for quick visual recognition",
      "Task counts will integrate with existing progress bar system from Task-1.2"
    ],
    "testing_approach": "Test task count accuracy, age calculation correctness, color coding thresholds, and responsive layout integration"
  },
  "acceptance_criteria": [
    "Task counts display as \"X/Y complete\" format",
    "Project age shown with appropriate visual indicators",
    "Age indicators use color coding for quick recognition",
    "Card layout accommodates new information cleanly",
    "All information updates in real-time"
  ],
  "estimated_complexity": "Medium",
  "prerequisites": ["Task-1.2 - Task Completion Visual Progress Indicators (completed)"],
  "baseline_metadata": {
    "loaded_from": "codebase_manifest.json",
    "timestamp": "2025-07-15T22:05:00.000Z",
    "file_count": 48,
    "file_size": 37704,
    "last_modified": "2025-07-15T02:22:00.583419377"
  },
  "completion": {
    "status": "completed",
    "commit_hash": "34eaa08",
    "commit_timestamp": "2025-07-15T22:50:00.000Z",
    "validation_status": "PASS",
    "lessons_learned": [
      "Color-coded age indicators provide excellent visual feedback for project age",
      "Task count displays in 'X/Y complete' format are highly informative",
      "dateHelpers utility creates reusable age calculation patterns",
      "Real-time updates work seamlessly with existing project/task state"
    ]
  }
}