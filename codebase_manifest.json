{
  "version": "1.1",
  "generated": "2025-07-15T12:00:00.000Z",
  "project": {
    "name": "project-nudger",
    "description": "An opinionated task management application designed to combat project neglect and procrastination through a weighted priority system and an escalating series of notifications",
    "version": "0.0.0",
    "tech_stack": "React 19.1.0 + Vite 6.3.5 + Firebase Firestore + Tailwind CSS + Web Bluetooth + AI Integration",
    "deployment": "Netlify static site with Firebase backend",
    "repository": "Active Git repository with task-driven development workflow"
  },
  "documentation": {
    "readme": "/home/mmariani/Projects/ProjectNudger/Project Nudger/README.md",
    "docs": "/home/mmariani/Projects/ProjectNudger/Project Nudger/docs/",
    "task_list": "/home/mmariani/Projects/ProjectNudger/Project Nudger/TASK_AND_PROJECT_ROADMAP.md",
    "architecture_notes": "Comprehensive documentation in docs/ including PRD, architecture analysis, and API specifications"
  },
  "files": {
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/App.jsx": {
      "purpose": "Main application orchestrator managing global state, Firebase subscriptions, and all core business logic",
      "exports": {
        "functions": ["App", "ProjectModal", "ImportConfirmModal", "SessionEndModal", "TaskDetailModal", "ProjectDeleteConfirmModal"],
        "classes": [],
        "constants": []
      },
      "imports": [
        "react",
        "firebase/firestore",
        "lucide-react",
        "./config/firebase",
        "./config/constants",
        "./utils/helpers",
        "./components/layout/TopNavBar",
        "./components/views/*",
        "./services/M5DialBLEService",
        "./hooks/useObsidianSync",
        "./utils/aiNudgeService"
      ],
      "sideEffects": [
        "Firebase Firestore real-time subscriptions",
        "M5Stack Dial BLE communication",
        "AI service API calls",
        "Browser notifications and TTS",
        "Theme management (dark/light mode)"
      ]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/main.jsx": {
      "purpose": "React application entry point with StrictMode initialization",
      "exports": {
        "functions": [],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "react-dom/client", "./index.css", "./App.jsx"],
      "sideEffects": ["DOM root creation and React app mounting"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/config/firebase.js": {
      "purpose": "Firebase Firestore configuration and connection management",
      "exports": {
        "functions": [],
        "classes": [],
        "constants": ["db", "basePath"]
      },
      "imports": ["firebase/app", "firebase/firestore"],
      "sideEffects": ["Firebase app initialization", "Environment variable reading"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/config/constants.js": {
      "purpose": "Central configuration for nudge system levels, thresholds, and Pomodoro timing",
      "exports": {
        "functions": [],
        "classes": [],
        "constants": ["NUDGE_CONFIG", "POMODORO_CONFIG"]
      },
      "imports": [],
      "sideEffects": []
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/config/obsidian.js": {
      "purpose": "Obsidian integration configuration with safe defaults and user setting merging",
      "exports": {
        "functions": ["getMergedObsidianConfig"],
        "classes": [],
        "constants": ["DEFAULT_OBSIDIAN_CONFIG"]
      },
      "imports": [],
      "sideEffects": []
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/utils/helpers.js": {
      "purpose": "Core utility functions for time formatting, color generation, URL validation, and task analysis",
      "exports": {
        "functions": [
          "timeAgo",
          "generateHslColor",
          "getComplementaryColor", 
          "getAnalogousColor",
          "formatTime",
          "isValidUrl",
          "formatUrl",
          "isPastDue",
          "isNudged"
        ],
        "classes": [],
        "constants": []
      },
      "imports": [],
      "sideEffects": []
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/utils/taskHelpers.js": {
      "purpose": "Hierarchical task management utilities for building task trees and parent-child relationships",
      "exports": {
        "functions": [
          "buildTaskHierarchy",
          "flattenTaskHierarchy",
          "getTaskDepth",
          "canCompleteParent",
          "getTaskChildren",
          "getTaskDescendants",
          "validateTaskHierarchy",
          "getRootParent",
          "getParentCompletionPercentage"
        ],
        "classes": [],
        "constants": []
      },
      "imports": [],
      "sideEffects": []
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/utils/aiNudgeService.js": {
      "purpose": "AI-powered recommendation engine supporting multiple LLM providers with personality-driven nudging",
      "exports": {
        "functions": ["generateAINudge", "getAINudgeRecommendations"],
        "classes": [],
        "constants": []
      },
      "imports": [],
      "sideEffects": [
        "API calls to OpenAI, Gemini, and Anthropic",
        "Text-to-speech synthesis",
        "ntfy notification delivery"
      ]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/utils/obsidianApi.js": {
      "purpose": "REST API client for Obsidian Local REST plugin integration",
      "exports": {
        "functions": [],
        "classes": ["ObsidianApi"],
        "constants": []
      },
      "imports": ["../config/obsidian"],
      "sideEffects": ["HTTP requests to local Obsidian server", "File system operations"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/utils/markdownTemplates.js": {
      "purpose": "Markdown generation utilities for Obsidian-compatible project and dashboard files",
      "exports": {
        "functions": ["generateProjectMarkdown", "generateDashboardMarkdown"],
        "classes": [],
        "constants": []
      },
      "imports": ["date-fns"],
      "sideEffects": []
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/utils/dummyData.js": {
      "purpose": "Development utility for generating sample projects, tasks, and categories",
      "exports": {
        "functions": ["generateDummyData"],
        "classes": [],
        "constants": []
      },
      "imports": ["firebase/firestore", "../config/firebase"],
      "sideEffects": ["Firebase Firestore writes", "User confirmation dialogs"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/services/M5DialBLEService.js": {
      "purpose": "Web Bluetooth service for M5Stack Dial hardware integration using singleton pattern",
      "exports": {
        "functions": [],
        "classes": ["M5DialBLEService"],
        "constants": ["SERVICE_UUID", "m5DialBLEService"]
      },
      "imports": [],
      "sideEffects": ["Bluetooth device scanning and connection", "GATT characteristic operations"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/hooks/useObsidianSync.js": {
      "purpose": "React hook for orchestrating Firebase to Obsidian synchronization workflows",
      "exports": {
        "functions": ["useObsidianSync"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "../utils/obsidianApi", "../config/obsidian", "../utils/markdownTemplates"],
      "sideEffects": ["Network requests to Obsidian API", "File creation in Obsidian vault"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/hooks/useM5Dial.js": {
      "purpose": "React hook for managing M5Stack Dial BLE device connection and communication",
      "exports": {
        "functions": ["useM5Dial"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "../services/M5DialBLEService"],
      "sideEffects": ["Bluetooth Low Energy operations"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/hooks/useNotifications.js": {
      "purpose": "React hook for centralized notification management with multiple notification types",
      "exports": {
        "functions": ["useNotifications"],
        "classes": [],
        "constants": []
      },
      "imports": ["react"],
      "sideEffects": ["Toast notification display"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/hooks/useProjectStages.js": {
      "purpose": "React hook for managing project stage workflows and transitions",
      "exports": {
        "functions": ["useProjectStages"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "../utils/projectStages"],
      "sideEffects": []
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/layout/TopNavBar.jsx": {
      "purpose": "Primary navigation header with view switching, session status, and hardware integration controls",
      "exports": {
        "functions": ["TopNavBar"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "lucide-react", "../../hooks/useM5Dial", "../shared/ObsidianSyncStatus", "./NudgerLogo"],
      "sideEffects": ["M5 Dial connection management", "Navigation state updates"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/layout/NudgerLogo.jsx": {
      "purpose": "Brand logo component with theme-aware SVG rendering",
      "exports": {
        "functions": ["NudgerLogo"],
        "classes": [],
        "constants": []
      },
      "imports": ["react"],
      "sideEffects": []
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/views/DashboardView/index.jsx": {
      "purpose": "Main dashboard interface providing centralized overview of projects, timer, and AI recommendations",
      "exports": {
        "functions": ["DashboardView"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "./RecommendationEngine", "./NudgeStatus", "./EnhancedTimerWidget", "../../shared/ProjectFilters", "../../../utils/helpers"],
      "sideEffects": ["Dynamic color changes on hover", "Project selection updates"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/views/DashboardView/RecommendationEngine.jsx": {
      "purpose": "AI-powered task recommendation widget using weighted scoring algorithm",
      "exports": {
        "functions": ["RecommendationEngine"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "lucide-react"],
      "sideEffects": ["Real-time recommendation calculations"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/views/DashboardView/NudgeStatus.jsx": {
      "purpose": "Nudge system status indicator with visual level representation",
      "exports": {
        "functions": ["NudgeStatus"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "lucide-react"],
      "sideEffects": []
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/views/DashboardView/EnhancedTimerWidget.jsx": {
      "purpose": "Comprehensive Pomodoro timer with task selection and session management",
      "exports": {
        "functions": ["EnhancedTimerWidget"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "lucide-react", "../../../utils/helpers"],
      "sideEffects": ["Timer countdown updates", "Session state management"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/views/ProjectsView.jsx": {
      "purpose": "Grid-based projects overview with filtering, task previews, and project management",
      "exports": {
        "functions": ["ProjectsView"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "lucide-react", "../shared/ProjectFilters", "../../utils/helpers", "./ProjectsView/KanbanBoard"],
      "sideEffects": ["Project filtering", "Task interaction events"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/views/ProjectView.jsx": {
      "purpose": "Detailed single project view with hierarchical task management and AI integration",
      "exports": {
        "functions": ["ProjectView"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "lucide-react", "../shared/TaskItem", "../shared/AINudgeDisplay", "../../utils/helpers", "../../config/constants"],
      "sideEffects": ["Task hierarchy expansion", "AI nudge notifications"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/views/TasksView.jsx": {
      "purpose": "Master task list with enhanced filtering, hierarchical display, toggle filters, and bulk operations",
      "exports": {
        "functions": ["TasksView"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "../shared/TaskItem", "../shared/ProjectFilters", "../../utils/taskFilters", "../../utils/taskHelpers"],
      "sideEffects": ["Task filtering and search", "Hierarchical task expansion", "Toggle filter state management"],
      "enhancements": [
        "Added Quick Filters section with blue styling and border",
        "Integrated ProjectFilters component with showTaskFilters=true",
        "Added pastDueFilter and nudgedFilter toggle state management",
        "Enhanced filtering logic to combine dropdown filters with toggle filters",
        "Added visual indicator props (showPastDueIndicator, showNudgedIndicator, highlightPastDue, highlightNudged) to TaskItem rendering",
        "Implemented isPastDue and isNudgedTask utility functions for filter logic",
        "Enhanced useMemo filtering to handle combined standard and toggle filters",
        "Added conditional hierarchy building when filters are active"
      ]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/views/TrackingView.jsx": {
      "purpose": "Active session tracking interface with timer controls and session notes",
      "exports": {
        "functions": ["TrackingView"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "lucide-react", "../../utils/helpers"],
      "sideEffects": ["Timer updates", "Session completion events"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/views/SettingsView.jsx": {
      "purpose": "Application settings and configuration interface with data management tools",
      "exports": {
        "functions": ["SettingsView"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "lucide-react", "../shared/LoadingButton", "../../config/constants"],
      "sideEffects": ["Settings persistence", "Data import/export operations"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/views/ArchivedProjectsView.jsx": {
      "purpose": "Archived projects management with restoration capabilities",
      "exports": {
        "functions": ["ArchivedProjectsView"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "lucide-react", "../shared/ProjectFilters", "../../utils/helpers"],
      "sideEffects": ["Project restoration actions"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/shared/TaskItem.jsx": {
      "purpose": "Reusable task component with hierarchical display, action buttons, and status indicators",
      "exports": {
        "functions": ["TaskItem"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "lucide-react", "../../utils/helpers", "../../utils/taskHelpers"],
      "sideEffects": ["Task interaction events", "Hierarchy expansion toggle"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/shared/AINudgeDisplay.jsx": {
      "purpose": "AI recommendation modal with robot personality and interactive suggestions",
      "exports": {
        "functions": ["AINudgeDisplay"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "lucide-react"],
      "sideEffects": ["Modal display", "User interaction tracking"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/shared/SessionCompletionModal.jsx": {
      "purpose": "Session completion interface with next session planning and break management",
      "exports": {
        "functions": ["SessionCompletionModal"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "lucide-react", "../../config/constants"],
      "sideEffects": ["Session transition events"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/shared/NotificationSystem.jsx": {
      "purpose": "Toast notification system with multiple notification types and auto-dismiss",
      "exports": {
        "functions": ["NotificationSystem"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "lucide-react"],
      "sideEffects": ["Toast display and auto-dismiss timers"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/shared/ObsidianSyncStatus.jsx": {
      "purpose": "Obsidian synchronization status indicator with last sync information",
      "exports": {
        "functions": ["ObsidianSyncStatus"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "lucide-react", "../../utils/helpers"],
      "sideEffects": []
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/shared/ObsidianSyncProgressModal.jsx": {
      "purpose": "Modal progress indicator for Obsidian synchronization operations",
      "exports": {
        "functions": ["ObsidianSyncProgressModal"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "lucide-react"],
      "sideEffects": ["Modal display", "Progress updates"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/shared/LoadingButton.jsx": {
      "purpose": "Reusable button component with loading state and spinner animation",
      "exports": {
        "functions": ["LoadingButton"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "lucide-react"],
      "sideEffects": []
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/shared/ProjectFilters.jsx": {
      "purpose": "Enhanced project and task filtering controls with owner selection, status filtering, and task-specific toggles for Past Due and Nudged tasks",
      "exports": {
        "functions": ["ProjectFilters"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "lucide-react"],
      "sideEffects": ["Filter state updates"],
      "enhancements": [
        "Added Past Due filter toggle with Clock icon from lucide-react",
        "Added Nudged filter toggle with AlertTriangle icon from lucide-react", 
        "Added showTaskFilters prop to conditionally display task-specific filters",
        "Enhanced with pastDueFilter, setPastDueFilter, nudgedFilter, setNudgedFilter props",
        "Implemented visual styling with red theme for Past Due and orange theme for Nudged filters",
        "Added hover states and active/inactive styling for toggle buttons"
      ]
    }
  },
  "dependencies": {
    "runtime": [
      "react@19.1.0 - Core UI framework",
      "react-dom@19.1.0 - DOM rendering library", 
      "firebase@11.9.1 - Backend database and authentication",
      "lucide-react@0.517.0 - Icon library",
      "@dnd-kit/core@6.3.1 - Drag and drop functionality",
      "@dnd-kit/sortable@8.0.0 - Sortable drag and drop",
      "@dnd-kit/utilities@3.2.2 - Drag and drop utilities",
      "obsidian-mcp-server@2.0.7 - Obsidian integration"
    ],
    "development": [
      "vite@6.3.5 - Build tool and dev server",
      "@vitejs/plugin-react@4.4.1 - React plugin for Vite",
      "tailwindcss@3.4.0 - CSS framework",
      "eslint@9.25.0 - Code linting",
      "vitest@1.6.0 - Testing framework",
      "@testing-library/react@16.0.0 - React testing utilities",
      "@testing-library/jest-dom@6.4.2 - DOM testing matchers"
    ],
    "build": [
      "postcss@8.5.6 - CSS processing",
      "autoprefixer@10.4.21 - CSS vendor prefixes",
      "@vitest/coverage-v8@1.6.0 - Test coverage",
      "jsdom@24.1.0 - DOM environment for testing"
    ]
  },
  "architecture": {
    "main_flow": "React App → Firebase Firestore (real-time) → Component State → UI Updates → User Actions → Firebase Writes",
    "data_flow": "Firestore (primary) ↔ React State ↔ Obsidian Sync ↔ M5 Dial BLE ↔ AI Services (OpenAI/Gemini/Anthropic)",
    "configuration": "Environment Variables → Firebase Config → Application Constants → Feature Flags → Component Props",
    "key_components": [
      "App.jsx - Global orchestrator",
      "DashboardView - Main interface", 
      "ProjectView - Detailed project management",
      "TaskItem - Hierarchical task display",
      "EnhancedTimerWidget - Pomodoro functionality",
      "RecommendationEngine - AI-powered suggestions"
    ],
    "integration_points": [
      "Firebase Firestore - Real-time data persistence",
      "M5Stack Dial - Hardware timer via Web Bluetooth",
      "Obsidian - Knowledge management sync via REST API",
      "AI Services - Multi-provider recommendation engine",
      "ntfy.sh - External notification delivery",
      "Web Speech API - Text-to-speech functionality"
    ]
  },
  "development": {
    "approach": "Task-driven development with structured roadmap and completion tracking",
    "workflow": "Feature tasks → Implementation → Testing → Validation → Documentation",
    "task_status": "Active development with completed and prepared task queues",
    "current_phase": "Feature enhancement and optimization phase",
    "version_control": "Git with main branch, task-based commits, and completion metadata",
    "testing": "Vitest with React Testing Library, minimal coverage currently",
    "deployment": "Netlify static hosting with environment variable configuration",
    "recent_completions": [
      "Task-1.1: Enhanced task filtering with Past Due and Nudged toggles in TasksView and ProjectFilters components"
    ],
    "file_structure": {
      "total_source_files": 44,
      "components": 23,
      "utilities": 8,
      "hooks": 4,
      "services": 1,
      "configuration": 3,
      "documentation": "Comprehensive with PRD, roadmaps, and architecture docs"
    }
  }
}