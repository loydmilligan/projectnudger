{
  "version": "1.5",
  "generated": "2025-07-15T22:50:00.000Z",
  "project": {
    "name": "project-nudger",
    "description": "An opinionated task management application designed to combat project neglect and procrastination through a weighted priority system and an escalating series of notifications",
    "version": "0.0.0",
    "tech_stack": "React 19.1.0 + Vite 6.3.5 + Firebase Firestore + Tailwind CSS + Web Bluetooth + AI Integration + @dnd-kit for drag-and-drop",
    "deployment": "Netlify static site with Firebase backend",
    "repository": "Active Git repository with task-driven development workflow"
  },
  "documentation": {
    "readme": "/home/mmariani/Projects/ProjectNudger/Project Nudger/README.md",
    "docs": "/home/mmariani/Projects/ProjectNudger/Project Nudger/docs/",
    "task_list": "/home/mmariani/Projects/ProjectNudger/Project Nudger/TASK_AND_PROJECT_ROADMAP.md",
    "architecture_notes": "Comprehensive documentation in docs/ including PRD, architecture analysis, and API specifications"
  },
  "files": {
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/App.jsx": {
      "purpose": "Main application orchestrator managing global state, Firebase subscriptions, and all core business logic",
      "exports": {
        "functions": ["App", "ProjectModal", "ImportConfirmModal", "SessionEndModal", "TaskDetailModal", "ProjectDeleteConfirmModal"],
        "classes": [],
        "constants": []
      },
      "imports": [
        "react",
        "firebase/firestore",
        "lucide-react",
        "./config/firebase",
        "./config/constants",
        "./utils/helpers",
        "./components/layout/TopNavBar",
        "./components/views/*",
        "./services/M5DialBLEService",
        "./hooks/useObsidianSync",
        "./utils/aiNudgeService",
        "./utils/taskHelpers"
      ],
      "sideEffects": [
        "Firebase Firestore real-time subscriptions",
        "M5Stack Dial BLE communication",
        "AI service API calls",
        "Browser notifications and TTS",
        "Theme management (dark/light mode)"
      ],
      "enhancements": [
        "Added handleMoveProjectToStage function for kanban board project stage management",
        "Enhanced project save logic to ensure proper stage assignment with 'planning' default",
        "Added comprehensive error handling and validation for project stage operations",
        "Integrated stage management with Firebase document updates and real-time sync"
      ]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/main.jsx": {
      "purpose": "React application entry point with StrictMode initialization",
      "exports": {
        "functions": [],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "react-dom/client", "./index.css", "./App.jsx"],
      "sideEffects": ["DOM root creation and React app mounting"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/config/firebase.js": {
      "purpose": "Firebase Firestore configuration and connection management",
      "exports": {
        "functions": [],
        "classes": [],
        "constants": ["db", "basePath"]
      },
      "imports": ["firebase/app", "firebase/firestore"],
      "sideEffects": ["Firebase app initialization", "Environment variable reading"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/config/constants.js": {
      "purpose": "Central configuration for nudge system levels, thresholds, and Pomodoro timing",
      "exports": {
        "functions": [],
        "classes": [],
        "constants": ["NUDGE_CONFIG", "POMODORO_CONFIG"]
      },
      "imports": [],
      "sideEffects": []
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/config/obsidian.js": {
      "purpose": "Obsidian integration configuration with safe defaults and user setting merging",
      "exports": {
        "functions": ["getMergedObsidianConfig"],
        "classes": [],
        "constants": ["DEFAULT_OBSIDIAN_CONFIG"]
      },
      "imports": [],
      "sideEffects": []
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/utils/dateHelpers.js": {
      "purpose": "Date and age calculation utilities for project management with color-coded age indicators",
      "exports": {
        "functions": [
          "calculateProjectAge",
          "formatAge",
          "getAgeColorClass",
          "getAgeInDays"
        ],
        "classes": [],
        "constants": ["AGE_THRESHOLDS"]
      },
      "imports": [],
      "sideEffects": [],
      "features": [
        "Calculate project age from creation date",
        "Format age for human-readable display (days, weeks, months)",
        "Color-coded age indicators based on configurable thresholds",
        "Age threshold constants for visual feedback"
      ]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/utils/helpers.js": {
      "purpose": "Core utility functions for time formatting, color generation, URL validation, and task analysis - enhanced with project information utilities",
      "exports": {
        "functions": [
          "timeAgo",
          "generateHslColor",
          "getComplementaryColor", 
          "getAnalogousColor",
          "formatTime",
          "isValidUrl",
          "formatUrl",
          "isPastDue",
          "isNudged",
          "getTaskCountForProject",
          "getProjectAge",
          "getAgeColorClass"
        ],
        "classes": [],
        "constants": []
      },
      "imports": ["./dateHelpers"],
      "sideEffects": [],
      "enhancements": [
        "Added getTaskCountForProject function for calculating completed vs total tasks",
        "Added getProjectAge function for age calculation and formatting",
        "Added getAgeColorClass function for color-coded age indicators",
        "Integrated with dateHelpers utility for consistent date handling"
      ]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/utils/taskHelpers.js": {
      "purpose": "Hierarchical task management utilities for building task trees and parent-child relationships",
      "exports": {
        "functions": [
          "buildTaskHierarchy",
          "flattenTaskHierarchy",
          "getTaskDepth",
          "canCompleteParent",
          "getTaskChildren",
          "getTaskDescendants",
          "validateTaskHierarchy",
          "getRootParent",
          "getParentCompletionPercentage"
        ],
        "classes": [],
        "constants": []
      },
      "imports": [],
      "sideEffects": []
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/utils/projectStages.js": {
      "purpose": "Project stage management utilities providing default configurations, validation, and migration logic for kanban workflow",
      "exports": {
        "functions": [
          "getDefaultStages",
          "validateStage",
          "migrateProjectsToStages",
          "sortStagesByOrder",
          "findStageById",
          "groupProjectsByStage",
          "generateStageId",
          "reorderStages"
        ],
        "classes": [],
        "constants": []
      },
      "imports": [],
      "sideEffects": [],
      "features": [
        "Default 4-stage workflow: Planning → In Progress → Review → Complete",
        "HSL color system for consistent stage visualization",
        "Stage validation with comprehensive error reporting",
        "Project migration logic for existing data compatibility",
        "Drag-and-drop reordering support with order management",
        "Unique ID generation with conflict resolution",
        "Project grouping by stage for kanban board organization"
      ]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/utils/aiNudgeService.js": {
      "purpose": "AI-powered recommendation engine supporting multiple LLM providers with personality-driven nudging",
      "exports": {
        "functions": ["generateAINudge", "getAINudgeRecommendations"],
        "classes": [],
        "constants": []
      },
      "imports": [],
      "sideEffects": [
        "API calls to OpenAI, Gemini, and Anthropic",
        "Text-to-speech synthesis",
        "ntfy notification delivery"
      ]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/utils/obsidianApi.js": {
      "purpose": "REST API client for Obsidian Local REST plugin integration",
      "exports": {
        "functions": [],
        "classes": ["ObsidianApi"],
        "constants": []
      },
      "imports": ["../config/obsidian"],
      "sideEffects": ["HTTP requests to local Obsidian server", "File system operations"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/utils/markdownTemplates.js": {
      "purpose": "Markdown generation utilities for Obsidian-compatible project and dashboard files",
      "exports": {
        "functions": ["generateProjectMarkdown", "generateDashboardMarkdown"],
        "classes": [],
        "constants": []
      },
      "imports": ["date-fns"],
      "sideEffects": []
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/utils/dummyData.js": {
      "purpose": "Development utility for generating sample projects, tasks, and categories",
      "exports": {
        "functions": ["generateDummyData"],
        "classes": [],
        "constants": []
      },
      "imports": ["firebase/firestore", "../config/firebase"],
      "sideEffects": ["Firebase Firestore writes", "User confirmation dialogs"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/services/M5DialBLEService.js": {
      "purpose": "Web Bluetooth service for M5Stack Dial hardware integration using singleton pattern",
      "exports": {
        "functions": [],
        "classes": ["M5DialBLEService"],
        "constants": ["SERVICE_UUID", "m5DialBLEService"]
      },
      "imports": [],
      "sideEffects": ["Bluetooth device scanning and connection", "GATT characteristic operations"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/hooks/useObsidianSync.js": {
      "purpose": "React hook for orchestrating Firebase to Obsidian synchronization workflows",
      "exports": {
        "functions": ["useObsidianSync"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "../utils/obsidianApi", "../config/obsidian", "../utils/markdownTemplates"],
      "sideEffects": ["Network requests to Obsidian API", "File creation in Obsidian vault"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/hooks/useM5Dial.js": {
      "purpose": "React hook for managing M5Stack Dial BLE device connection and communication",
      "exports": {
        "functions": ["useM5Dial"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "../services/M5DialBLEService"],
      "sideEffects": ["Bluetooth Low Energy operations"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/hooks/useNotifications.js": {
      "purpose": "React hook for centralized notification management with multiple notification types",
      "exports": {
        "functions": ["useNotifications"],
        "classes": [],
        "constants": []
      },
      "imports": ["react"],
      "sideEffects": ["Toast notification display"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/hooks/useProjectStages.js": {
      "purpose": "React hook for managing project stage workflows and transitions",
      "exports": {
        "functions": ["useProjectStages"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "../utils/projectStages"],
      "sideEffects": []
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/layout/TopNavBar.jsx": {
      "purpose": "Primary navigation header with view switching, session status, and hardware integration controls",
      "exports": {
        "functions": ["TopNavBar"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "lucide-react", "../../hooks/useM5Dial", "../shared/ObsidianSyncStatus", "./NudgerLogo"],
      "sideEffects": ["M5 Dial connection management", "Navigation state updates"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/layout/NudgerLogo.jsx": {
      "purpose": "Brand logo component with theme-aware SVG rendering",
      "exports": {
        "functions": ["NudgerLogo"],
        "classes": [],
        "constants": []
      },
      "imports": ["react"],
      "sideEffects": []
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/views/DashboardView/index.jsx": {
      "purpose": "Main dashboard interface providing centralized overview of projects with progress indicators, timer, and AI recommendations",
      "exports": {
        "functions": ["DashboardView"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "./RecommendationEngine", "./NudgeStatus", "./EnhancedTimerWidget", "../../shared/ProjectFilters", "../../shared/ProgressBar", "../../../utils/helpers"],
      "sideEffects": ["Dynamic color changes on hover", "Project selection updates", "Real-time progress calculations"],
      "enhancements": [
        "Added ProgressBar component integration for each project card",
        "Enhanced project cards with task completion indicators",
        "Added completion styling with green ring effects for 100% completed projects",
        "Real-time task completion calculations and progress display",
        "Visual feedback for project completion status in dashboard grid"
      ]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/views/DashboardView/RecommendationEngine.jsx": {
      "purpose": "AI-powered task recommendation widget using weighted scoring algorithm",
      "exports": {
        "functions": ["RecommendationEngine"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "lucide-react"],
      "sideEffects": ["Real-time recommendation calculations"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/views/DashboardView/NudgeStatus.jsx": {
      "purpose": "Nudge system status indicator with visual level representation",
      "exports": {
        "functions": ["NudgeStatus"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "lucide-react"],
      "sideEffects": []
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/views/DashboardView/EnhancedTimerWidget.jsx": {
      "purpose": "Comprehensive Pomodoro timer with task selection and session management",
      "exports": {
        "functions": ["EnhancedTimerWidget"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "lucide-react", "../../../utils/helpers"],
      "sideEffects": ["Timer countdown updates", "Session state management"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/views/ProjectsView.jsx": {
      "purpose": "Optimized projects management interface with enhanced card layout, improved responsive design, and dual-mode display (grid/kanban)",
      "exports": {
        "functions": ["ProjectsView"],
        "classes": [],
        "constants": []
      },
      "imports": [
        "react", 
        "lucide-react", 
        "../shared/ProjectFilters", 
        "../../utils/helpers", 
        "./ProjectsView/KanbanBoard",
        "./ProjectsView/ViewModeToggle",
        "./ProjectsView/StageManager"
      ],
      "sideEffects": ["Project filtering", "Task interaction events", "View mode state management"],
      "enhancements": [
        "Added dual-mode view with grid and kanban layouts",
        "Integrated ViewModeToggle component for seamless view switching",
        "Added StageManager integration for kanban workflow customization",
        "Enhanced project operations with stage-aware actions",
        "Improved responsive design for both view modes",
        "Added comprehensive project filtering and search capabilities",
        "Task-1.5: Optimized grid layout with enhanced responsive breakpoints",
        "Task-1.5: Reduced white space with gap-4 instead of gap-6",
        "Task-1.5: Enhanced column progression (1→2→3→4) for better screen utilization",
        "Task-1.5: Added medium breakpoint for improved tablet experience",
        "Task-1.5: Better integration with ProgressBar components from Task-1.2"
      ]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/views/ProjectsView/ProjectCard.jsx": {
      "purpose": "Enhanced project card component with progress visualization, completion styling, task count displays, project age indicators, and drag-and-drop support for both grid and kanban views",
      "exports": {
        "functions": ["ProjectCard"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "@dnd-kit/sortable", "@dnd-kit/utilities", "lucide-react", "../../../utils/helpers", "../../shared/ProgressBar"],
      "sideEffects": ["Drag and drop operations", "Progress calculations", "URL navigation"],
      "enhancements": [
        "Added ProgressBar component integration with task completion tracking",
        "Enhanced completion styling with green borders and backgrounds for 100% completed projects",
        "Real-time task completion calculations (completed/total tasks)",
        "Progress percentage display with 5-color gradient system",
        "Completion celebration effects with visual feedback",
        "Improved accessibility with ARIA labels and progress indicators",
        "Enhanced visual hierarchy with completion status styling",
        "URL link display with proper formatting and external link icons",
        "Responsive design with flexible card layout",
        "Added drag-and-drop support for kanban board operations",
        "Task-2.1: Added task count displays in 'X/Y complete' format",
        "Task-2.1: Integrated project age indicators with color-coded badges",
        "Task-2.1: Added Clock icon for better visual recognition of age",
        "Task-2.1: Enhanced responsive layout to accommodate new information elements"
      ]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/views/ProjectsView/ViewModeToggle.jsx": {
      "purpose": "Toggle component for switching between grid and kanban views with visual indicators and accessibility support",
      "exports": {
        "functions": ["ViewModeToggle"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "lucide-react"],
      "sideEffects": ["View mode state transitions"],
      "features": [
        "Clean toggle interface with LayoutGrid and Kanban icons",
        "Active state visual feedback with shadow and color changes",
        "Responsive design with text labels hidden on small screens",
        "Disabled state support with opacity and cursor management",
        "Smooth transition animations between modes",
        "Accessibility support with proper button states and tooltips"
      ]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/views/ProjectsView/StageManager.jsx": {
      "purpose": "Comprehensive modal component for managing project stages with full CRUD operations, drag-and-drop reordering, and validation",
      "exports": {
        "functions": ["StageManager", "SortableStageItem"],
        "classes": [],
        "constants": []
      },
      "imports": [
        "react",
        "lucide-react",
        "@dnd-kit/core",
        "@dnd-kit/sortable", 
        "@dnd-kit/utilities",
        "../../../utils/projectStages"
      ],
      "sideEffects": [
        "Modal display and state management",
        "Drag-and-drop operations for stage reordering",
        "Stage validation and error handling",
        "Color picker RGB to HSL conversion"
      ],
      "features": [
        "Full CRUD operations: Create, Read, Update, Delete stages",
        "Drag-and-drop reordering with @dnd-kit integration",
        "Color picker with RGB to HSL conversion for consistent theming",
        "Comprehensive validation with real-time error feedback",
        "Reset to defaults functionality with user confirmation",
        "Responsive design with mobile-friendly input layouts",
        "Loading states and disabled states during operations",
        "Stage descriptions and visual color indicators",
        "Sortable stage items with grip handles and edit modes",
        "Prevention of deleting the last remaining stage"
      ]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/views/ProjectsView/KanbanBoard.jsx": {
      "purpose": "Main kanban board layout component with configurable columns, comprehensive drag-drop support, and responsive design",
      "exports": {
        "functions": ["KanbanBoard"],
        "classes": [],
        "constants": []
      },
      "imports": [
        "react",
        "@dnd-kit/core",
        "@dnd-kit/sortable",
        "lucide-react",
        "./KanbanColumn",
        "./ProjectCard",
        "../../../utils/projectStages"
      ],
      "sideEffects": [
        "Drag-and-drop operations with visual feedback",
        "Project stage transitions and Firebase updates",
        "Real-time project grouping and organization"
      ],
      "features": [
        "Comprehensive drag-and-drop system with @dnd-kit/core",
        "Visual drag overlay with enhanced styling and rotation effects",
        "Responsive grid layout with automatic column sizing (max 4 columns)",
        "Project grouping by stage with real-time updates",
        "Enhanced error handling and validation for stage transitions",
        "Loading states and error feedback for user actions",
        "Mobile-responsive design with warning for small screens",
        "Collision detection and keyboard accessibility support",
        "Integration with projectStages utility for data organization",
        "Visual feedback during drag operations with ring effects"
      ]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/views/ProjectsView/KanbanColumn.jsx": {
      "purpose": "Individual kanban column component for project stages with droppable functionality, stage visualization, and project management",
      "exports": {
        "functions": ["KanbanColumn"],
        "classes": [],
        "constants": []
      },
      "imports": [
        "react",
        "@dnd-kit/core",
        "@dnd-kit/sortable",
        "lucide-react",
        "./ProjectCard"
      ],
      "sideEffects": [
        "Droppable area management for project cards",
        "Visual feedback during drag-over states",
        "Project creation actions in appropriate stages"
      ],
      "features": [
        "Droppable area implementation with @dnd-kit/core",
        "Visual drag-over feedback with border and background changes",
        "Stage header with color indicator, name, and project count",
        "Add project button for planning stage and first stage",
        "Empty state handling with contextual messages",
        "Sortable context for project cards within columns",
        "Stage description display in column footer",
        "Responsive design with proper spacing and layout",
        "Enhanced visual feedback with animated drop zones",
        "Integration with ProjectCard component for consistent styling"
      ]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/views/ProjectView.jsx": {
      "purpose": "Detailed single project view with hierarchical task management and AI integration",
      "exports": {
        "functions": ["ProjectView"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "lucide-react", "../shared/TaskItem", "../shared/AINudgeDisplay", "../../utils/helpers", "../../config/constants"],
      "sideEffects": ["Task hierarchy expansion", "AI nudge notifications"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/views/TasksView.jsx": {
      "purpose": "Master task list with enhanced filtering, hierarchical display, toggle filters, and bulk operations",
      "exports": {
        "functions": ["TasksView"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "../shared/TaskItem", "../shared/ProjectFilters", "../../utils/taskFilters", "../../utils/taskHelpers"],
      "sideEffects": ["Task filtering and search", "Hierarchical task expansion", "Toggle filter state management"],
      "enhancements": [
        "Added Quick Filters section with blue styling and border",
        "Integrated ProjectFilters component with showTaskFilters=true",
        "Added pastDueFilter and nudgedFilter toggle state management",
        "Enhanced filtering logic to combine dropdown filters with toggle filters",
        "Added visual indicator props (showPastDueIndicator, showNudgedIndicator, highlightPastDue, highlightNudged) to TaskItem rendering",
        "Implemented isPastDue and isNudgedTask utility functions for filter logic",
        "Enhanced useMemo filtering to handle combined standard and toggle filters",
        "Added conditional hierarchy building when filters are active"
      ]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/views/TrackingView.jsx": {
      "purpose": "Active session tracking interface with timer controls and session notes",
      "exports": {
        "functions": ["TrackingView"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "lucide-react", "../../utils/helpers"],
      "sideEffects": ["Timer updates", "Session completion events"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/views/SettingsView.jsx": {
      "purpose": "Application settings and configuration interface with data management tools",
      "exports": {
        "functions": ["SettingsView"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "lucide-react", "../shared/LoadingButton", "../../config/constants"],
      "sideEffects": ["Settings persistence", "Data import/export operations"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/views/ArchivedProjectsView.jsx": {
      "purpose": "Archived projects management with restoration capabilities",
      "exports": {
        "functions": ["ArchivedProjectsView"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "lucide-react", "../shared/ProjectFilters", "../../utils/helpers"],
      "sideEffects": ["Project restoration actions"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/shared/TaskItem.jsx": {
      "purpose": "Reusable task component with hierarchical display, action buttons, and status indicators",
      "exports": {
        "functions": ["TaskItem"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "lucide-react", "../../utils/helpers", "../../utils/taskHelpers"],
      "sideEffects": ["Task interaction events", "Hierarchy expansion toggle"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/shared/AINudgeDisplay.jsx": {
      "purpose": "AI recommendation modal with robot personality and interactive suggestions",
      "exports": {
        "functions": ["AINudgeDisplay"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "lucide-react"],
      "sideEffects": ["Modal display", "User interaction tracking"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/shared/SessionCompletionModal.jsx": {
      "purpose": "Session completion interface with next session planning and break management",
      "exports": {
        "functions": ["SessionCompletionModal"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "lucide-react", "../../config/constants"],
      "sideEffects": ["Session transition events"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/shared/NotificationSystem.jsx": {
      "purpose": "Toast notification system with multiple notification types and auto-dismiss",
      "exports": {
        "functions": ["NotificationSystem"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "lucide-react"],
      "sideEffects": ["Toast display and auto-dismiss timers"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/shared/ObsidianSyncStatus.jsx": {
      "purpose": "Obsidian synchronization status indicator with last sync information",
      "exports": {
        "functions": ["ObsidianSyncStatus"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "lucide-react", "../../utils/helpers"],
      "sideEffects": []
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/shared/ObsidianSyncProgressModal.jsx": {
      "purpose": "Modal progress indicator for Obsidian synchronization operations",
      "exports": {
        "functions": ["ObsidianSyncProgressModal"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "lucide-react"],
      "sideEffects": ["Modal display", "Progress updates"]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/shared/LoadingButton.jsx": {
      "purpose": "Reusable button component with loading state and spinner animation",
      "exports": {
        "functions": ["LoadingButton"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "lucide-react"],
      "sideEffects": []
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/shared/ProjectFilters.jsx": {
      "purpose": "Enhanced project and task filtering controls with owner selection, status filtering, and task-specific toggles for Past Due and Nudged tasks",
      "exports": {
        "functions": ["ProjectFilters"],
        "classes": [],
        "constants": []
      },
      "imports": ["react", "lucide-react"],
      "sideEffects": ["Filter state updates"],
      "enhancements": [
        "Added Past Due filter toggle with Clock icon from lucide-react",
        "Added Nudged filter toggle with AlertTriangle icon from lucide-react", 
        "Added showTaskFilters prop to conditionally display task-specific filters",
        "Enhanced with pastDueFilter, setPastDueFilter, nudgedFilter, setNudgedFilter props",
        "Implemented visual styling with red theme for Past Due and orange theme for Nudged filters",
        "Added hover states and active/inactive styling for toggle buttons"
      ]
    },
    "/home/mmariani/Projects/ProjectNudger/Project Nudger/src/components/shared/ProgressBar.jsx": {
      "purpose": "Reusable progress bar component with comprehensive features for task completion visualization and celebration effects",
      "exports": {
        "functions": ["ProgressBar"],
        "classes": [],
        "constants": []
      },
      "imports": ["react"],
      "sideEffects": ["CSS animations for progress transitions and completion celebrations"],
      "features": [
        "Flexible progress calculation from percentage or completed/total props",
        "5-color gradient system: red (0-24%), orange (25-49%), yellow (50-74%), blue (75-99%), green (100%)",
        "Three size variants: sm (h-1.5), md (h-2.5), lg (h-4) with corresponding label sizes",
        "Accessibility support with ARIA attributes and proper labeling",
        "Smooth transition animations with 300ms duration",
        "Completion celebration effects with animated ping and green ring",
        "Optional label display with task count and percentage",
        "Dark mode support with theme-aware styling",
        "Active progress animation with gradient stripe effects",
        "Safe percentage clamping to 0-100% range",
        "Responsive design with customizable className support"
      ]
    }
  },
  "dependencies": {
    "runtime": [
      "react@19.1.0 - Core UI framework",
      "react-dom@19.1.0 - DOM rendering library", 
      "firebase@11.9.1 - Backend database and authentication",
      "lucide-react@0.517.0 - Icon library",
      "@dnd-kit/core@6.3.1 - Drag and drop functionality",
      "@dnd-kit/sortable@8.0.0 - Sortable drag and drop",
      "@dnd-kit/utilities@3.2.2 - Drag and drop utilities",
      "obsidian-mcp-server@2.0.7 - Obsidian integration"
    ],
    "development": [
      "vite@6.3.5 - Build tool and dev server",
      "@vitejs/plugin-react@4.4.1 - React plugin for Vite",
      "tailwindcss@3.4.0 - CSS framework",
      "eslint@9.25.0 - Code linting",
      "vitest@1.6.0 - Testing framework",
      "@testing-library/react@16.0.0 - React testing utilities",
      "@testing-library/jest-dom@6.4.2 - DOM testing matchers"
    ],
    "build": [
      "postcss@8.5.6 - CSS processing",
      "autoprefixer@10.4.21 - CSS vendor prefixes",
      "@vitest/coverage-v8@1.6.0 - Test coverage",
      "jsdom@24.1.0 - DOM environment for testing"
    ]
  },
  "architecture": {
    "main_flow": "React App → Firebase Firestore (real-time) → Component State → UI Updates → User Actions → Firebase Writes",
    "data_flow": "Firestore (primary) ↔ React State ↔ Obsidian Sync ↔ M5 Dial BLE ↔ AI Services (OpenAI/Gemini/Anthropic)",
    "configuration": "Environment Variables → Firebase Config → Application Constants → Feature Flags → Component Props",
    "key_components": [
      "App.jsx - Global orchestrator with stage management",
      "DashboardView - Main interface with progress indicators", 
      "ProjectsView - Dual-mode interface (grid/kanban) with comprehensive project management",
      "KanbanBoard - Drag-and-drop workflow management with stage transitions",
      "KanbanColumn - Stage-based project organization with visual feedback",
      "StageManager - Full CRUD stage management with validation and reordering",
      "ViewModeToggle - Seamless view switching between grid and kanban modes",
      "ProjectCard - Enhanced project display with progress visualization and drag support",
      "ProgressBar - Reusable progress indicator with completion effects",
      "TaskItem - Hierarchical task display",
      "EnhancedTimerWidget - Pomodoro functionality",
      "RecommendationEngine - AI-powered suggestions"
    ],
    "integration_points": [
      "Firebase Firestore - Real-time data persistence with stage management",
      "@dnd-kit - Comprehensive drag-and-drop system for kanban workflows",
      "M5Stack Dial - Hardware timer via Web Bluetooth",
      "Obsidian - Knowledge management sync via REST API",
      "AI Services - Multi-provider recommendation engine",
      "ntfy.sh - External notification delivery",
      "Web Speech API - Text-to-speech functionality"
    ],
    "workflow_features": [
      "Dual-mode project display: Traditional grid and kanban board views",
      "Comprehensive stage management with default 4-stage workflow",
      "Drag-and-drop project transitions between workflow stages",
      "Customizable stages with color coding and descriptions",
      "Real-time progress tracking with 5-color gradient system",
      "Enhanced visual feedback for completed projects and tasks",
      "Responsive design optimized for both desktop and mobile devices"
    ]
  },
  "development": {
    "approach": "Task-driven development with structured roadmap and completion tracking",
    "workflow": "Feature tasks → Implementation → Testing → Validation → Documentation",
    "task_status": "Active development with completed and prepared task queues",
    "current_phase": "Feature enhancement and optimization phase - kanban workflow implementation complete",
    "version_control": "Git with main branch, task-based commits, and completion metadata",
    "testing": "Vitest with React Testing Library, minimal coverage currently",
    "deployment": "Netlify static hosting with environment variable configuration",
    "recent_completions": [
      "Task-1.1: Enhanced task filtering with Past Due and Nudged toggles in TasksView and ProjectFilters components",
      "Task-1.2: Implemented comprehensive progress indicators with ProgressBar component, enhanced ProjectCard and DashboardView with real-time task completion tracking, 5-color gradient system, and completion celebration effects",
      "Task-1.4: Implemented comprehensive kanban board workflow management with KanbanBoard, KanbanColumn, ViewModeToggle, and StageManager components; added project stage utilities and drag-and-drop functionality",
      "Task-1.5: Optimized project card layout with improved responsive breakpoints, reduced white space, and enhanced column progression for better visual balance across all screen sizes",
      "Task-2.1: Added task count displays and project age indicators with color-coded visual feedback - created dateHelpers utility, enhanced helpers with project information functions, and updated ProjectCard with at-a-glance information display"
    ],
    "file_structure": {
      "total_source_files": 49,
      "components": 27,
      "utilities": 10,
      "hooks": 4,
      "services": 1,
      "configuration": 3,
      "documentation": "Comprehensive with PRD, roadmaps, and architecture docs",
      "new_kanban_components": [
        "KanbanBoard.jsx - Main kanban board with drag-and-drop",
        "KanbanColumn.jsx - Individual stage columns",
        "ViewModeToggle.jsx - Grid/kanban view switching", 
        "StageManager.jsx - Complete stage management modal"
      ]
    },
    "task_14_implementation": {
      "summary": "Comprehensive kanban board workflow management system",
      "components_added": [
        "KanbanBoard - Main board layout with drag-and-drop project management",
        "KanbanColumn - Individual stage columns with visual feedback",
        "ViewModeToggle - Clean interface for switching between grid and kanban views",
        "StageManager - Full CRUD modal for stage management with validation"
      ],
      "utilities_added": [
        "projectStages.js - Complete stage management utility with validation, migration, and organization functions"
      ],
      "enhancements_made": [
        "Enhanced ProjectsView with dual-mode display and comprehensive project operations",
        "Updated App.jsx with handleMoveProjectToStage function for Firebase integration",
        "Added @dnd-kit integration for drag-and-drop functionality throughout kanban system",
        "Implemented responsive design with mobile-friendly fallbacks and warnings",
        "Added comprehensive error handling and loading states for all stage operations"
      ],
      "features_implemented": [
        "Default 4-stage workflow: Planning → In Progress → Review → Complete",
        "Drag-and-drop project movement between stages with visual feedback",
        "Customizable stage colors using HSL color system for consistency",
        "Stage validation with comprehensive error reporting",
        "Project creation directly in appropriate stages (planning/first stage)",
        "Responsive grid layout with automatic column sizing",
        "Enhanced visual feedback during drag operations",
        "Mobile-responsive design with warning for optimal experience"
      ]
    }
  }
}